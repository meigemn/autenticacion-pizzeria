{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient()\nif (process.env.NODE_ENV !== 'production') global.prisma = prisma\n\nexport default prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6IAAA,CAAA,eAAY;AAChD,wCAA2C,OAAO,MAAM,GAAG;uCAE5C"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/data.js"],"sourcesContent":["'use server'\nimport  prisma  from '@/lib/prisma'\n\nexport async function getUserById(id) {\n  const user = await prisma.user.findUnique({\n    where: { id }\n  });\n  return user\n}\n\nexport async function getUserByEmail(email) {\n  const user = await prisma.user.findUnique({\n    where: { email }\n  });\n  return user\n}\n\n\n\n\nasync function obtenerRepartidores() {\n  const repartidores = await prisma.repartidor.findMany()\n  return repartidores\n}\n\n\nasync function obtenerRepartidor(id) {\n  const repartidor = await prisma.repartidor.findUnique({\n      where: { id: +id }\n  })\n  return repartidor\n}\n\n\n// ---------------------   PEDIDOS -----------------------\n\nasync function obtenerPedidos() {\n  const pedidos = await prisma.pedido.findMany({\n      include: {\n          repartidor: true,\n          pizzas: true,\n      }\n  })\n  return pedidos\n}\n\n\nasync function obtenerPedido(id) {\n  const pedido = await prisma.pedido.findUnique({\n      where: { id: +id },\n      include: {\n          repartidor: true,\n          pizzas: true,\n      }\n  })\n  return pedido\n}\n\n// ---------------------   PIZZAS -----------------------\n\nasync function obtenerPizzas() {\n  const pizzas = await prisma.pizza.findMany()\n  return pizzas\n}\n\n\nasync function obtenerPizza(id) {\n  const pizza = await prisma.pizza.findUnique({\n      where: { id: +id }\n  })\n  return pizza\n}\n\n\nexport {\n  obtenerRepartidores,\n  obtenerRepartidor,\n  obtenerPedidos,\n  obtenerPedido,\n  obtenerPizzas,\n  obtenerPizza\n}"],"names":[],"mappings":";;;;;;;;;;AACA;AADA;;AAGO,eAAe,YAAY,EAAE;IAClC,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAG;IACd;IACA,OAAO;AACT;AAEO,eAAe,eAAe,KAAK;IACxC,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAM;IACjB;IACA,OAAO;AACT;AAKA,eAAe;IACb,MAAM,eAAe,MAAM,oHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,QAAQ;IACrD,OAAO;AACT;AAGA,eAAe,kBAAkB,EAAE;IACjC,MAAM,aAAa,MAAM,oHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QAClD,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT;AAGA,0DAA0D;AAE1D,eAAe;IACb,MAAM,UAAU,MAAM,oHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;QACzC,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAGA,eAAe,cAAc,EAAE;IAC7B,MAAM,SAAS,MAAM,oHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;QAC1C,OAAO;YAAE,IAAI,CAAC;QAAG;QACjB,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAEA,yDAAyD;AAEzD,eAAe;IACb,MAAM,SAAS,MAAM,oHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ;IAC1C,OAAO;AACT;AAGA,eAAe,aAAa,EAAE;IAC5B,MAAM,QAAQ,MAAM,oHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/auth.config.js"],"sourcesContent":["import Google from \"@auth/core/providers/google\"\nimport GitHub from '@auth/core/providers/github'\nimport Discord from '@auth/core/providers/discord'\nimport Credentials from \"@auth/core/providers/credentials\"\nimport { getUserByEmail } from \"@/lib/data\"\n\nexport default {\n    providers: [\n        Google,\n        GitHub,\n        Discord,\n        Credentials({\n            async authorize(credentials) {\n                console.log('AUTHORIZE')\n                const user = await getUserByEmail(credentials.email)\n                return user\n            },\n        }),\n    ]\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;uCAEe;IACX,WAAW;QACP,qJAAA,CAAA,UAAM;QACN,qJAAA,CAAA,UAAM;QACN,sJAAA,CAAA,UAAO;QACP,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;YACR,MAAM,WAAU,WAAW;gBACvB,QAAQ,GAAG,CAAC;gBACZ,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,YAAY,KAAK;gBACnD,OAAO;YACX;QACJ;KACH;AACL"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["// Run on edge\nimport NextAuth from \"next-auth\";\nimport authConfig from \"@/auth.config\";\n\nconst { auth } = NextAuth(authConfig);\n\n\nexport default auth((req) => {\n  console.log(`MIDDLEWARE`, req.nextUrl.pathname, req.auth);\n\n  if (!req.auth) {\n    const callbackUrl = req.nextUrl.pathname + req.nextUrl.search\n    const encodedCallbackUrl = encodeURIComponent(callbackUrl);\n\n    return Response.redirect(req.nextUrl.origin + `/auth/login?callbackUrl=${encodedCallbackUrl}`)\n  }\n})\n\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - images\n     * - auth\n     * - about\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico, sitemap.xml, robots.txt (metadata files)\n     * - $ (home page)\n     */\n    '/((?!api|images|auth|about|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt|$).*)',\n  ],\n}\n\n// export const config = {\n//   matcher: [\n//     \"/dashboard(.*)\",\n//     \"/admin(.*)\",\n//     \"/proveedores(.*)\",\n//     \"/productos(.*)\",\n//   ],\n// };"],"names":[],"mappings":"AAAA,cAAc;;;;;AACd;AACA;AADA;;;AAGA,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,qHAAA,CAAA,UAAU;uCAGrB,KAAK,CAAC;IACnB,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,IAAI;IAExD,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM;QAC7D,MAAM,qBAAqB,mBAAmB;QAE9C,OAAO,SAAS,QAAQ,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,wBAAwB,EAAE,oBAAoB;IAC/F;AACF;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;;;;KAUC,GACD;KACD;AACH,EAEA,0BAA0B;CAC1B,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,0BAA0B;CAC1B,wBAAwB;CACxB,OAAO;CACP,KAAK"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}