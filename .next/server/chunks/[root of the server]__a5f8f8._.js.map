{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///home/carlos/Escritorio/Grado/SegundoDAW/EntornosServidor/segundo_trimestre/tema8_autenticacion-main/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient()\nif (process.env.NODE_ENV !== 'production') global.prisma = prisma\n\nexport default prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAChD,wCAA2C,OAAO,MAAM,GAAG;uCAE5C"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/carlos/Escritorio/Grado/SegundoDAW/EntornosServidor/segundo_trimestre/tema8_autenticacion-main/src/lib/data.js"],"sourcesContent":["'use server'\nimport  prisma  from '@/lib/prisma'\n\nexport async function getUserById(id) {\n  const user = await prisma.user.findUnique({\n    where: { id }\n  });\n  return user\n}\n\nexport async function getUserByEmail(email) {\n  const user = await prisma.user.findUnique({\n    where: { email }\n  });\n  return user\n}\n\n\n\n\nasync function obtenerRepartidores() {\n  const repartidores = await prisma.repartidor.findMany()\n  return repartidores\n}\n\n\nasync function obtenerRepartidor(id) {\n  const repartidor = await prisma.repartidor.findUnique({\n      where: { id: +id }\n  })\n  return repartidor\n}\n\n\n// ---------------------   PEDIDOS -----------------------\n\nasync function obtenerPedidos() {\n  const pedidos = await prisma.pedido.findMany({\n      include: {\n          repartidor: true,\n          pizzas: true,\n      }\n  })\n  return pedidos\n}\n\n\nasync function obtenerPedido(id) {\n  const pedido = await prisma.pedido.findUnique({\n      where: { id: +id },\n      include: {\n          repartidor: true,\n          pizzas: true,\n      }\n  })\n  return pedido\n}\n\n// ---------------------   PIZZAS -----------------------\n\nasync function obtenerPizzas() {\n  const pizzas = await prisma.pizza.findMany()\n  return pizzas\n}\n\n\nasync function obtenerPizza(id) {\n  const pizza = await prisma.pizza.findUnique({\n      where: { id: +id }\n  })\n  return pizza\n}\n\n\nexport {\n  obtenerRepartidores,\n  obtenerRepartidor,\n  obtenerPedidos,\n  obtenerPedido,\n  obtenerPizzas,\n  obtenerPizza\n}"],"names":[],"mappings":";;;;;;;;;;;;AACA;;;;;AAEO,eAAe,uCAAS,GAAT,YAAY,EAAE;IAClC,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAG;IACd;IACA,OAAO;AACT;AAEO,eAAe,uCAAY,GAAZ,eAAe,KAAK;IACxC,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAM;IACjB;IACA,OAAO;AACT;AAKA,eAAe;IACb,MAAM,eAAe,MAAM,sHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,QAAQ;IACrD,OAAO;AACT;AAGA,eAAe,kBAAkB,EAAE;IACjC,MAAM,aAAa,MAAM,sHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QAClD,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT;AAGA,0DAA0D;AAE1D,eAAe;IACb,MAAM,UAAU,MAAM,sHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;QACzC,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAGA,eAAe,cAAc,EAAE;IAC7B,MAAM,SAAS,MAAM,sHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;QAC1C,OAAO;YAAE,IAAI,CAAC;QAAG;QACjB,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAEA,yDAAyD;AAEzD,eAAe;IACb,MAAM,SAAS,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ;IAC1C,OAAO;AACT;AAGA,eAAe,aAAa,EAAE;IAC5B,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT;;;;IApEsB;IAOA;IAiEpB,uCAAiB,GAAjB;IACA,uCAAe,GAAf;IACA,uCAAY,GAAZ;IACA,uCAAW,GAAX;IACA,uCAAW,GAAX;IACA,uCAAU,GAAV;;AA7EoB,iPAAA;AAOA,iPAAA;AAiEpB,iPAAA;AACA,iPAAA;AACA,iPAAA;AACA,iPAAA;AACA,iPAAA;AACA,iPAAA"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/carlos/Escritorio/Grado/SegundoDAW/EntornosServidor/segundo_trimestre/tema8_autenticacion-main/src/auth.config.js"],"sourcesContent":["import Google from \"@auth/core/providers/google\"\nimport GitHub from '@auth/core/providers/github'\nimport Discord from '@auth/core/providers/discord'\nimport Credentials from \"@auth/core/providers/credentials\"\nimport { getUserByEmail } from \"@/lib/data\"\n\nexport default {\n    providers: [\n        Google,\n        GitHub,\n        Discord,\n        Credentials({\n            async authorize(credentials) {\n                console.log('AUTHORIZE')\n                const user = await getUserByEmail(credentials.email)\n                return user\n            },\n        }),\n    ]\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;uCAEe;IACX,WAAW;QACP,uJAAA,CAAA,UAAM;QACN,uJAAA,CAAA,UAAM;QACN,wJAAA,CAAA,UAAO;QACP,CAAA,GAAA,4JAAA,CAAA,UAAW,AAAD,EAAE;YACR,MAAM,WAAU,WAAW;gBACvB,QAAQ,GAAG,CAAC;gBACZ,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE,YAAY,KAAK;gBACnD,OAAO;YACX;QACJ;KACH;AACL"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/carlos/Escritorio/Grado/SegundoDAW/EntornosServidor/segundo_trimestre/tema8_autenticacion-main/src/auth.js"],"sourcesContent":["import NextAuth from \"next-auth\"\nimport  prisma  from \"@/lib/prisma\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { getUserById } from \"@/lib/data\"\nimport authConfig from \"@/auth.config\"\n\n\nexport const options = {\n    session: { strategy: 'jwt' },\n    adapter: PrismaAdapter(prisma),\n    pages: {\n        signIn: '/auth/login',\n        signOut: '/auth/logout',\n        error: '/auth/error'\n    },\n    events: {\n        async linkAccount({ user }) {\n            await prisma.user.update({\n                where: { id: user.id },\n                data: { emailVerified: new Date() }\n            })\n        }\n    },\n    callbacks: {\n        async session({ session, token }) {\n            session.user.id = token?.sub;     // Para recuperar ID de usuario desde el token\n            session.user.role = token?.role   // Para recuperar rol de usuario desde el token\n            return session\n        },\n\n        async jwt({ token }) {\n            if (!token.sub) return token;\n\n            const user = await getUserById(token.sub)\n            if (!user) return token;\n\n            token.role = user?.role\n            return token\n        }\n    },\n}\n\n\n\nexport const {\n    handlers: { GET, POST },\n    auth,\n    signIn,\n    signOut\n} = NextAuth({ ...options, ...authConfig })\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAJA;;;;;;AAOO,MAAM,UAAU;IACnB,SAAS;QAAE,UAAU;IAAM;IAC3B,SAAS,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,sHAAA,CAAA,UAAM;IAC7B,OAAO;QACH,QAAQ;QACR,SAAS;QACT,OAAO;IACX;IACA,QAAQ;QACJ,MAAM,aAAY,EAAE,IAAI,EAAE;YACtB,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrB,OAAO;oBAAE,IAAI,KAAK,EAAE;gBAAC;gBACrB,MAAM;oBAAE,eAAe,IAAI;gBAAO;YACtC;QACJ;IACJ;IACA,WAAW;QACP,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC5B,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,KAAS,8CAA8C;YAChF,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,KAAO,+CAA+C;;YACjF,OAAO;QACX;QAEA,MAAM,KAAI,EAAE,KAAK,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,EAAE,OAAO;YAEvB,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD,EAAE,MAAM,GAAG;YACxC,IAAI,CAAC,MAAM,OAAO;YAElB,MAAM,IAAI,GAAG,MAAM;YACnB,OAAO;QACX;IACJ;AACJ;AAIO,MAAM,EACT,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,EACvB,IAAI,EACJ,MAAM,EACN,OAAO,EACV,GAAG,CAAA,GAAA,uJAAA,CAAA,UAAQ,AAAD,EAAE;IAAE,GAAG,OAAO;IAAE,GAAG,uHAAA,CAAA,UAAU;AAAC"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}